plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
}

def fingerprinter = services.get(org.gradle.internal.fingerprint.classpath.ClasspathFingerprinter)
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach { task ->
    doFirst {
        ClassLoader classLoader = task.getClass().classLoader
        while (classLoader instanceof URLClassLoader) {
            def fingerprints = [] as Set
            def allFiles = [] as Set
            classLoader.getURLs().each {
                fingerprints.add(["${task.path}:${file(it.file).name}", "${fingerprinter.fingerprint(files(it.file)).hash}"])
                allFiles.add(file(it.file))
            }
            //fingerprints.each { buildScan.value it[0], it[1] }
            //buildScan.value "${task.path}:classpath", allFiles.join("\n")
            println "${task.path}:classpath="
            println allFiles.join("\n")
            classLoader = classLoader.parent
        }
    }
}